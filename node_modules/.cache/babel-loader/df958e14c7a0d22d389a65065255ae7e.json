{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3500'\n  }),\n  tagTypes: ['Todos'],\n  endpoints: builder => ({\n    getTodos: builder.query({\n      query: () => '/todos',\n      transformResponse: res => res.sort((a, b) => b.id - a.id),\n      providesTags: ['Todos']\n    }),\n    addTodo: builder.mutation({\n      query: todo => ({\n        url: '/todos',\n        method: 'POST',\n        body: todo\n      }),\n      invalidatesTags: ['Todos']\n    }),\n    updateTodo: builder.mutation({\n      query: todo => ({\n        url: `/todos/${todo.id}`,\n        method: 'PATCH',\n        body: todo\n      }),\n      invalidatesTags: ['Todos']\n    }),\n    deleteTodo: builder.mutation({\n      query: _ref => {\n        let {\n          id\n        } = _ref;\n        return {\n          url: `/todos/${id}`,\n          method: 'DELETE',\n          body: id\n        };\n      },\n      invalidatesTags: ['Todos']\n    })\n  })\n});\nexport const {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation\n} = apiSlice;","map":{"version":3,"sources":["/home/yugandhar/Documents/myLearing/React-projects/react-redux-toolkit-query/src/features/api/apiSlice.js"],"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getTodos","query","transformResponse","res","sort","a","b","id","providesTags","addTodo","mutation","todo","url","method","body","invalidatesTags","updateTodo","deleteTodo","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;AAC9BG,EAAAA,WAAW,EAAE,KADiB;AAE9BC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFK;AAG9BC,EAAAA,QAAQ,EAAE,CAAC,OAAD,CAHoB;AAI9BC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACrBC,IAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;AACpBA,MAAAA,KAAK,EAAE,MAAM,QADO;AAEpBC,MAAAA,iBAAiB,EAAEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,EAAF,GAAOF,CAAC,CAACE,EAA5B,CAFN;AAGpBC,MAAAA,YAAY,EAAE,CAAC,OAAD;AAHM,KAAd,CADW;AAMrBC,IAAAA,OAAO,EAAEV,OAAO,CAACW,QAAR,CAAiB;AACtBT,MAAAA,KAAK,EAAGU,IAAD,KAAW;AACdC,QAAAA,GAAG,EAAE,QADS;AAEdC,QAAAA,MAAM,EAAE,MAFM;AAGdC,QAAAA,IAAI,EAAEH;AAHQ,OAAX,CADe;AAMtBI,MAAAA,eAAe,EAAE,CAAC,OAAD;AANK,KAAjB,CANY;AAcrBC,IAAAA,UAAU,EAAEjB,OAAO,CAACW,QAAR,CAAiB;AACzBT,MAAAA,KAAK,EAAGU,IAAD,KAAW;AACdC,QAAAA,GAAG,EAAG,UAASD,IAAI,CAACJ,EAAG,EADT;AAEdM,QAAAA,MAAM,EAAE,OAFM;AAGdC,QAAAA,IAAI,EAAEH;AAHQ,OAAX,CADkB;AAMzBI,MAAAA,eAAe,EAAE,CAAC,OAAD;AANQ,KAAjB,CAdS;AAsBrBE,IAAAA,UAAU,EAAElB,OAAO,CAACW,QAAR,CAAiB;AACzBT,MAAAA,KAAK,EAAE;AAAA,YAAC;AAAEM,UAAAA;AAAF,SAAD;AAAA,eAAa;AAChBK,UAAAA,GAAG,EAAG,UAASL,EAAG,EADF;AAEhBM,UAAAA,MAAM,EAAE,QAFQ;AAGhBC,UAAAA,IAAI,EAAEP;AAHU,SAAb;AAAA,OADkB;AAMzBQ,MAAAA,eAAe,EAAE,CAAC,OAAD;AANQ,KAAjB;AAtBS,GAAd;AAJmB,CAAD,CAA1B;AAqCP,OAAO,MAAM;AACTG,EAAAA,gBADS;AAETC,EAAAA,kBAFS;AAGTC,EAAAA,qBAHS;AAITC,EAAAA;AAJS,IAKT5B,QALG","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const apiSlice = createApi({\n    reducerPath: 'api',\n    baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:3500' }),\n    tagTypes: ['Todos'],\n    endpoints: (builder) => ({\n        getTodos: builder.query({\n            query: () => '/todos',\n            transformResponse: res => res.sort((a, b) => b.id - a.id),\n            providesTags: ['Todos']\n        }),\n        addTodo: builder.mutation({\n            query: (todo) => ({\n                url: '/todos',\n                method: 'POST',\n                body: todo\n            }),\n            invalidatesTags: ['Todos']\n        }),\n        updateTodo: builder.mutation({\n            query: (todo) => ({\n                url: `/todos/${todo.id}`,\n                method: 'PATCH',\n                body: todo\n            }),\n            invalidatesTags: ['Todos']\n        }),\n        deleteTodo: builder.mutation({\n            query: ({ id }) => ({\n                url: `/todos/${id}`,\n                method: 'DELETE',\n                body: id\n            }),\n            invalidatesTags: ['Todos']\n        }),\n    })\n})\n\nexport const {\n    useGetTodosQuery,\n    useAddTodoMutation,\n    useUpdateTodoMutation,\n    useDeleteTodoMutation\n} = apiSlice\n"]},"metadata":{},"sourceType":"module"}