{"ast":null,"code":"var _jsxFileName = \"/home/yugandhar/Documents/myLearing/React-projects/react-redux-toolkit-query/src/features/todos/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { useGetTodosQuery, useUpdateTodoMutation, useDeleteTodoMutation, useAddTodoMutation } from \"../api/apiSlice\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [newTodo, setNewTodo] = useState('');\n  const {\n    data: todos,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetTodosQuery();\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTodo({\n      userId: 1,\n      title: newTodo,\n      completed: false\n    });\n    setNewTodo('');\n  };\n\n  const newItemSection = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"new-todo\",\n      children: \"Enter a new todo item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-todo\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"new-todo\",\n        value: newTodo,\n        onChange: e => setNewTodo(e.target.value),\n        placeholder: \"Enter new todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n\n  let content;\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this);\n  } else if (isSuccess) {\n    content = todos.map(todo => {\n      //JSON.stringify(todos)\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            id: todo.id,\n            onChange: () => updateTodo({ ...todo,\n              completed: !todo.completed\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: todo.id,\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"trash\",\n          onClick: () => deleteTodo({\n            id: todo.id\n          }),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    });\n  } else if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), newItemSection, content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"5Rn1bSAPZkT+lNlmFfyi0GzujRU=\", false, function () {\n  return [useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/yugandhar/Documents/myLearing/React-projects/react-redux-toolkit-query/src/features/todos/TodoList.js"],"names":["useGetTodosQuery","useUpdateTodoMutation","useDeleteTodoMutation","useAddTodoMutation","FontAwesomeIcon","faTrash","faUpload","useState","TodoList","newTodo","setNewTodo","data","todos","isLoading","isSuccess","isError","error","addTodo","updateTodo","deleteTodo","handleSubmit","e","preventDefault","userId","title","completed","newItemSection","target","value","content","map","todo","id"],"mappings":"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","sourcesContent":["import {\n    useGetTodosQuery,\n    useUpdateTodoMutation,\n    useDeleteTodoMutation,\n    useAddTodoMutation\n} from \"../api/apiSlice\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faUpload } from '@fortawesome/free-solid-svg-icons'\nimport { useState } from \"react\"\n\nconst TodoList = () => {\n    const [newTodo, setNewTodo] = useState('')\n\n    const {\n        data: todos,\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    } = useGetTodosQuery()\n    const [addTodo] = useAddTodoMutation()\n    const [updateTodo] = useUpdateTodoMutation()\n    const [deleteTodo] = useDeleteTodoMutation()\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addTodo({ userId: 1, title: newTodo, completed: false })\n        setNewTodo('')\n    }\n\n    const newItemSection =\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"new-todo\">Enter a new todo item</label>\n            <div className=\"new-todo\">\n                <input\n                    type=\"text\"\n                    id=\"new-todo\"\n                    value={newTodo}\n                    onChange={(e) => setNewTodo(e.target.value)}\n                    placeholder=\"Enter new todo\"\n                />\n            </div>\n            <button className=\"submit\">\n                <FontAwesomeIcon icon={faUpload} />\n            </button>\n        </form>\n\n\n    let content;\n    if (isLoading) {\n        content = <p>Loading...</p>\n    } else if (isSuccess) {\n        content = todos.map(todo => { //JSON.stringify(todos)\n            return (\n                <article key={todo.id}>\n                    <div className=\"todo\">\n                        <input\n                            type=\"checkbox\"\n                            checked={todo.completed}\n                            id={todo.id}\n                            onChange={() => updateTodo({ ...todo, completed: !todo.completed })}\n                        />\n                        <label htmlFor={todo.id}>{todo.title}</label>\n                    </div>\n                    <button className=\"trash\" onClick={() => deleteTodo({ id: todo.id })}>\n                        <FontAwesomeIcon icon={faTrash} />\n                    </button>\n                </article>\n            )\n        })\n    } else if (isError) {\n        content = <p>{error}</p>\n    }\n\n    return (\n        <main>\n            <h1>Todo List</h1>\n            {newItemSection}\n            {content}\n        </main>\n    )\n}\nexport default TodoList"]},"metadata":{},"sourceType":"module"}